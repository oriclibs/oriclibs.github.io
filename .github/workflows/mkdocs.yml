# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: mkdocs

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Version de la documentation à déployer'
        required: true
      pck_name:
        description: 'pck'
        required: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:
      - name: Install mkdocs
        run: |
          pip install mkdocs
          pip install mkdocs-material
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with mkdocs
        env:
          VERSION: ${{ github.event.inputs.version }}
          PCK_NAME: ${{ github.event.inputs.pck_name }}
        run: |
          name_nolib=$(echo "${PCK_NAME}" | sed 's/lib$//')
          mkdir tmp/
          echo http://repo.orix.oric.org/dists/${VERSION}/tgz/6502/${PCK_NAME}.tgz
          curl -L http://repo.orix.oric.org/dists/${VERSION}/tgz/6502/${PCK_NAME}.tgz | tar -xz -C tmp/
          mkdir -p docs/${name_nolib}/${VERSION}/
          cp tmp/usr/share/${name_nolib}/${VERSION}/README.md docs/${name_nolib}/${VERSION}/index.md
         # echo "        - ${PCK_NAME}: ${name_nolib}/${VERSION}/index.md" >> mkdocs.yml
          ls -l tmp/
          mkdocs --version
          mkdocs build
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
